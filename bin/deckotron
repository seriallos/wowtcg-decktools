#!/usr/bin/env coffee
wowtcg  = require('../lib/wowtcg')
program = require('commander')

dataDir = __dirname + '/../data/'

setInfo = require( dataDir + 'cards/setlist.json' )

# write to stderr
stderr = ( msg ) ->
  process.stderr.write msg + "\n"

# utility function to load a deck file
loadDeck = ( deckFile ) ->
  for set, info of setInfo
    if info.block == 6
      wowtcg.CardLoader.loadCardsFromFile __dirname + "/../data/cards/#{set}.json"
  deck = wowtcg.DeckLoader.loadFromDeckFile deckFile

program
  .version('0.1')

program
  .command('costs [deck] [query]')
  .description('Report costs for a deck')
  .action( ( deckFile, query ) ->
    if query
      query = JSON.parse query
    deck = loadDeck deckFile
    if null == deck
      stderr "Unable to load #{ deckFile }"
    d = new wowtcg.Deckalyzer deck
    costs = d.distinct( 'cost', query )
    for cost, count of costs
      console.log "Cost #{cost}: #{count} cards"
  )

program
  .command('count [deck] [query]')
  .description('Get count of cards in a deck')
  .action( (deckFile, query ) ->
    if query
      query = JSON.parse query
    deck = loadDeck deckFile
    if null == deck
      stderr "Unable to load #{ deckFile }"
    d = new wowtcg.Deckalyzer deck
    count = d.count( query )
    console.log count
  )

program.parse( process.argv )
