#!/usr/bin/env coffee
wowtcg  = require('../lib/wowtcg')
program = require('commander')

dataDir = __dirname + '/../data/'

setInfo = require( dataDir + 'cards/setlist.json' )

# write to stderr
stderr = ( msg ) ->
  process.stderr.write msg + "\n"

# utility function to load a deck file
loadDeck = ( deckFile ) ->
  for set, info of setInfo
    if info.block == 6
      wowtcg.CardLoader.loadCardsFromFile __dirname + "/../data/cards/#{set}.json"
  deck = wowtcg.DeckLoader.loadFromDeckFile deckFile

# helper to parse a deck file, call deckalyzer, and return data
callDeckalyzer = ( deckFile, callback, args ) ->
  filter = null
  try
    if args.filter
      filter = JSON.parse args.filter
  catch error
    console.log "ERROR: Invalid JSON query (Must be fully quoted): " + error.message

  deck = loadDeck deckFile
  if null == deck
    stderr "Unable to load #{ deckFile }"
  d = new wowtcg.Deckalyzer deck
  return switch callback
    when 'count' then d.count( filter )
    when 'distinct' then d.distinct( args.type, filter )
    else console.log "Unknown command"

program
  .version('0.1')

program
  .command('distinct [type] [deck] [query]')
  .description('Report costs for a deck')
  .action( ( type, deckFile, query ) ->
    costs = callDeckalyzer deckFile, 'distinct', { type: type, filter: query }
    for cost, count of costs
      if cost
        console.log "#{cost}: #{count} cards"
  )

program
  .command('count [deck] [query]')
  .description('Get count of cards in a deck')
  .action( (deckFile, query ) ->
    count = callDeckalyzer deckFile, 'count', { filter: query }
    console.log count
  )

program.parse( process.argv )

# vim: ft=coffee
